using Lab1;
using Lab1.Classes;

Console.WriteLine("bool");
Lab1bool lab1Bool = new();
lab1Bool.Operators();
Console.WriteLine("//----------------------------------------//");
Console.WriteLine("byte");
Lab1byte lab1Byte = new();
lab1Byte.Operators();
Console.WriteLine("//----------------------------------------//");
Console.WriteLine("sbyte");
Lab1sbyte lab1Sbyte = new();
lab1Sbyte.Operators();
Console.WriteLine("//----------------------------------------//");
Console.WriteLine("short");
Lab1short lab1Short = new();
lab1Short.Operators();
Console.WriteLine("//----------------------------------------//");
Console.WriteLine("ushort");
Lab1ushort lab1Ushort = new();
lab1Ushort.Operators();
Console.WriteLine("//----------------------------------------//");
Console.WriteLine("int");
Lab1int lab1Int = new();
lab1Int.Operators();
Console.WriteLine("//----------------------------------------//");
Console.WriteLine("uint");
Lab1uint lab1Uint = new();
lab1Uint.Operators();
Console.WriteLine("//----------------------------------------//");
Console.WriteLine("long");
Lab1long lab1Long = new();
lab1Long.Operators();
Console.WriteLine("//----------------------------------------//");
Console.WriteLine("ulong");
Lab1ulong lab1Ulong = new();
lab1Ulong.Operators();
Console.WriteLine("//----------------------------------------//");
Console.WriteLine("float");
Lab1float lab1Float = new();
lab1Float.Operators();
Console.WriteLine("//----------------------------------------//");
Console.WriteLine("double");
Lab1double lab1Double = new();
lab1Double.Operators();
Console.WriteLine("//----------------------------------------//");
Console.WriteLine("char");
Lab1char lab1Char = new();
lab1Char.Operators();